apiVersion: apps/v1
kind: {{ .Values.kind | default "Deployment" }}
metadata:
  name: {{ include "fullname" . }}
  namespace: {{ include "fullnamespace" . }}
  labels: {{- include "custom.appValues" .Values.appLabels | nindent 4 }}
    name: {{ include "fullname" . }}
  annotations: {{- toYaml .Values.deploymentAnnotations | nindent 4 }}
spec:
  {{- if eq .Values.kind "StatefulSet" }}
  serviceName: {{ include "fullname" . }}-headless
  {{- end }}
  {{- if and (not .Values.autoscaling) (not (eq .Values.kind "DaemonSet")) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      name: {{ include "fullname" . }}
  {{- if .Values.strategy }}
  {{- if eq .Values.kind "StatefulSet" }}
  updateStrategy:
  {{- else }}
  strategy:
  {{- end }}
    type: RollingUpdate
    rollingUpdate: {{- toYaml .Values.strategy | nindent 6 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "custom.appValues" .Values.appLabels | nindent 8 }}
        name: {{ include "fullname" . }}
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }} 
        {{- if and .Values.configmap (not (empty .Values.configmap.data)) }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if and .Values.secret (hasKey .Values.secret "data") (not (empty .Values.secret.data)) }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- if .Values.dnsConfig }}
      dnsConfig: {{- toYaml .Values.dnsConfig | nindent 8 }}
      {{- end }}
      {{- if .Values.volumes }}
      volumes: {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets | trunc 63 }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext: {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinities }}
      affinity: {{- toYaml .Values.affinities | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken | default false }}
      {{- if .Values.initContainers }}
      initContainers:
        - name: {{ include "fullname" . }}-init
          image: "{{ .Values.initContainers.repository }}:{{ .Values.initContainers.tag }}"
          imagePullPolicy: {{ .Values.initContainers.pullPolicy }}
          {{- if .Values.initContainers.securityContext }}
          securityContext: {{- toYaml .Values.initContainers.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.initContainers.command }}
          command: {{- toYaml .Values.initContainers.command | nindent 12 }}
          {{- end }}
          {{- if .Values.initContainers.args }}
          args: {{- toYaml .Values.initContainers.args | nindent 12 }}
          {{- end }}
          {{- if .Values.initContainers.volumeMounts }}
          volumeMounts: {{- toYaml .Values.initContainers.volumeMounts | nindent 12 }}
          {{- end }}
          {{- if .Values.initContainers.envFrom }}
          envFrom: {{- toYaml .Values.initContainers.envFrom | nindent 12 }}
          {{- else if .Values.initContainers.envs }}
          env: {{- toYaml .Values.initContainers.envs | nindent 12 }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ include "fullname" . }}
          image: "{{ .Values.containers.repository }}:{{ .Values.containers.tag }}"
          imagePullPolicy: {{ .Values.containers.pullPolicy }}
          {{- if .Values.containers.securityContext }}
          securityContext: {{- toYaml .Values.containers.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.containers.command }}
          command: {{- toYaml .Values.containers.command | nindent 12 }}
          {{- end }}
          {{- if .Values.containers.args }}
          args: {{- toYaml .Values.containers.args | nindent 12 }}
          {{- end }}
          {{- if .Values.containers.volumeMounts }}
          volumeMounts: {{- toYaml .Values.containers.volumeMounts | nindent 12 }}
          {{- end }}
          {{- if .Values.containers.envFrom }}
          envFrom: {{- toYaml .Values.containers.envFrom | nindent 12 }}
          {{- else if .Values.containers.envs }}
          env: {{- toYaml .Values.containers.envs | nindent 12 }}
          {{- end }}
          ports:
            {{- range .Values.containers.ports}}
            - containerPort: {{ .containerPort }}
              name: {{ .name | trunc 63 }}
              protocol: TCP
            {{- end }}
          {{- if .Values.containers.livenessProbes }}
          livenessProbe: {{- toYaml .Values.containers.livenessProbes | nindent 12 }}
          {{- end }}
          {{- if .Values.containers.readinessProbes }}
          readinessProbe: {{- toYaml .Values.containers.readinessProbes | nindent 12 }}
          {{- end }}
          resources: {{- toYaml .Values.containers.resources | nindent 12 }}
  {{- if eq .Values.kind "StatefulSet" }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.volumeClaimTemplates.name | trunc 63 }}
    spec:
      accessModes: {{ .Values.volumeClaimTemplates.accessModes }}
      storageClassName: {{ .Values.volumeClaimTemplates.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.volumeClaimTemplates.storage }}
  {{- end }}
